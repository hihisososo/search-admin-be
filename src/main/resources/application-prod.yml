spring:
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/search_admin}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        show_sql: false
    hibernate:
      ddl-auto: validate

elasticsearch:
  host: ${ELASTICSEARCH_HOST:localhost}
  port: ${ELASTICSEARCH_PORT:9200}
  username: ${ELASTICSEARCH_USERNAME:}
  password: ${ELASTICSEARCH_PASSWORD:}

aws:
  access-key-id: ${AWS_ACCESS_KEY_ID:}
  secret-access-key: ${AWS_SECRET_ACCESS_KEY:}
  s3:
    bucket-name: ${AWS_S3_BUCKET_NAME:}
  ec2:
    instance-ids: ${AWS_EC2_INSTANCE_IDS:}
  region: ${AWS_REGION:ap-northeast-2}

logging:
  level:
    com.yjlee.search: INFO
    org.springframework.web: INFO
    org.hibernate: WARN
  file:
    name: logs/search-admin-be.log
    max-size: 10MB
    max-history: 30

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

server:
  port: 8080
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
  tomcat:
    threads:
      max: 200
      min-spare: 10
    accept-count: 100
    max-connections: 10000

openai:
  api-key: ${OPENAI_API_KEY:}