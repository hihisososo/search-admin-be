name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'ci/**' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Code formatting check
        run: ./gradlew spotlessCheck
      
      - name: Build application
        run: ./gradlew bootJar
      
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: build/libs/*.jar
          retention-days: 1

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/ci/'))
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: build/libs
      
      - name: Deploy to EC2
        env:
          KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$KEY" > key.pem
          chmod 600 key.pem
          
          # 파일 전송
          scp -o StrictHostKeyChecking=no -i key.pem build/libs/*.jar Dockerfile docker-compose.yml ${USER}@${HOST}:~/search-admin-be/
          
          # Docker 재시작
          ssh -o StrictHostKeyChecking=no -i key.pem ${USER}@${HOST} << 'EOF'
            cd ~/search-admin-be
            docker-compose down
            docker build -t search-admin-be .
            docker-compose up -d
          EOF
          
          rm -f key.pem